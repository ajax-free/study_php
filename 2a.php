<?php
//Изучение PHP для начинающих | Урок #3 - Пишем "Hello World!"
echo "Hello World!<br />";//вывод текста на экран
echo "Hello World!";
echo 'Руский текст';



//Изучение PHP для начинающих | Урок #4 - Комментарии в PHP
echo "Hi!"; // Эта строчка выводит Hi!
/*
	Комментарий №1
	Комментарий №2
	Комментарий №3
*/
echo "Hi!"; # Эта строчка выводит Hi!



//Изучение PHP для начинающих | Урок #5 - Переменные и их типы
$myNumber = 45; //переменная типа integer
$float = -3.25; //переменная типа float (с плавающей точкой)
$string = "Hello World!"; //строковая переменная
$bool = true; //булевая переменная

echo "Переменная myNumber = $myNumber"; //выведет текст в кавычках и значение переменной $myNumber
echo "<br />";
echo "Переменная float = $float"; //выведет текст в кавычках и значение переменной $float
echo "<br />";
echo "Переменная string = $string"; //выведет текст в кавычках и значение переменной $string
echo "<br />";
echo "Переменная bool = $bool"; //выведет текст в кавычках и 1
echo "<br />";
$myNumber = 12; //перезапишем значение переменной $myNumber
echo "Переменная myNumber = $myNumber"; //выведем текст и новое значение переменной $myNumber



//Изучение PHP для начинающих | Урок #6 - Константы
echo PHP_VERSION; //пример константы в PHP. Выведет версию PHP

define("PI", 3.14); //определили константу PI со значением 3.14
echo "<br />";
echo PI; //вывели значение константы на экран
echo "<br />";
echo defined("PI"); //вывод значения возвращаемого функцией defined, в данном случае выведет 1, т.к. константа PI определена



//Изучение PHP для начинающих | Урок #7 - Арифметические операции
$x = 32; //задаем переменные
$y = 22.13;
$summ = $x + $y; //складываем и присваиваем сумму в переменную
$diff = $x - $y; //вычитаем и присваиваем разность в переменную
$mult = $x * $y; //умножаем и присваиваем произведение в переменную
$dil = $x / $y; //делим и присваиваем частное в переменную

echo "Сумма из $x и $y = $summ<br />"; //выводим строку и значения переменных на экран
echo "Разница из $x и $y = $diff<br />";
echo "Умножение из $x и $y = $mult<br />";
echo "Деление из $x и $y = $dil<br />";

$z = 12;

$ostatok = $x % $z; //делим и присваиваем остаток от деления в переменную
echo "Остаток при делении из $x и $z = $ostatok<br />";

$q = 400;
$q /= 10; //короткая запись деления значения переменной на 10 и присваивания частного в эту же переменную
echo $q;
echo "<br />";
$q = $q + 1;
$q += 1;
$q++; //инкремент (увеличение на 1 методом сложения)
$q--; //декремент (уменьшение на 1 методом вычитания)
echo $q;



//Изучение PHP для начинающих | Урок #8 - Строковые операции
$str_1 = "<b>Первая строка</b> <input type=\"text\" />"; //вывод html сущности с экранированием кавычек
$str_2 = "<i>Вторая строка</i>";

echo $str_1."".$str_2." \" \\"; //конкатенация строк с экранированием кавычек и слеша

echo ' \' ';



//Изучение PHP для начинающих | Урок #9 - Логические операции
$x = 12;
$y = 34;
$z = 4.25;

$bool_1 = $x != $z; //отрицание равенства
$bool_2 = $x <= $y; //меньше либо равно

echo $bool_1."<br />".$bool_2."<br />"; // выведет на экран 1 и 1, т.к. оба выражения true

$bool_3 = !($x == $y); //инверсия результата выражения - отрицание (меняем true на false и наоборот)

$bool_4 = $x == $y || $z < $y; //логическое ИЛИ, вывведет true, если хотя бы одно выражение true

$bool_5 = $z != $y && $x < $y; //логическое И, выведет true, если оба выржения true

$bool_6 = $z != $x ^ $y < $z; //исключащее ИЛИ, выведет true, если выражения различны по результату (одно true, второе false)

echo "<br />".$bool_3."<br />".$bool_4."<br />".$bool_5."<br />".$bool_6;// выведет 1 1 1 1

$bool = !($x != $y && $z < $x) || $x != $y; //true

echo "<br />$bool = !($x != $y && $z < $x) || $x != $y"; //выводим строку со значениями переменных, для самопроверки



//Изучение PHP для начинающих | Урок #10 - Оператор эквивалентности
$string = "Example";
$num = 0;

$bool_1 = $string == true; //значения равны, строка при сравнении дает true
echo "$bool_1 = $string == true;"; //выводим пример на экран, значение $bool_1 = true

$bool_2 = $num == ""; //значения равны, 0 дает false, как и пустая строка
echo "<br />$bool_2 = $num == \"\";<hr />"; //выводим пример на экран, значение $bool_2 = true

$bool_3 = $string === true; //строгое сравнение происходит и по типу данных
echo "$bool_3 = $string === true"; //$bool_3 = false, на экран выведется пустота

$bool_4 = $num === ""; //строгое сравнение происходит и по типу данных
echo "<br>/$bool_4 = $num === \"\";" //$bool_4 = false, на экран выведется пустота



//Изучение PHP для начинающих | Урок #11 - Условные операторы
$x = 10;
$y = 5;

if($x == $y && $x != 12 && $y == 5 && ($x + 5) == 15) //проверка на выполнение условия
	echo 'Ура!'; //действие, если условие выполнится. Фигурные скобки не ставятся, т.к. строчка кода всего одна
else if ($x == 15 || $y != 7) { //альтернативное условие
	$num = 5;
	echo "Число № ".$num;
} else if ($x == 15 || $y != 7) { //еще одно альтернативное условие 
	$num = 5;
	echo "Число № ".$num;
}
else {
	echo "<br />";
	echo 'Всё сработало!';
}

if($x == $y && $x != 12 && $y == 5 && ($x + 5) == 15)
	echo 'Ура!';

$x == $y ? $string = "Да" : $string = "Нет"; //тернарный оператор
echo "<br />".$string; //выводится Нет, т.к. $x не равно $y



//Изучение PHP для начинающих | Урок #13 - Циклы For, While и Do While
for($i = 100; $i >= 80; $i -= 2){ //цикл for, в скобках указаны: начальное значение счетчика $i, условие, при котором цикл выполняется, действие, выполняемое после каждой итерации, пока выполняется цикл
	if($i % 5 == 0) continue; //если условеи выполняется, продолжаем выполнять цикл
	if($i <= 87) break; //если условие выполняется, выходим из цикла
	echo "Цикл под номером № $i<br />"; //вывод значения $i на экран в каждой итерации цикла 
}

echo "<br />";

$x = 1;

while($x <= 10){ //цикл while, в скобках указано условие выполнения цикла
	echo "Итерация под номером № $x<br />";
	if($x == 7) //если условие выполняется
		for($y = 0; $y < 5; $y += 3) //запустим влоденный цикл for
			echo "Еще одна итерация - $y<br />";
	$x++; //увеличиваем $x на 1 в каждой итерации цикла while
}

$z = 10;

echo "<br />";

do { //цикл do while. Сначала выполняется дейтсвие в теле do, а потом продолжает выполняться цикл, если условие while выполняется.
	echo "Операция выполнилась только один раз"; //выводим на экран, хотя бы один раз
	$z++; //увеличиваем $z на 1
} while ($z < 5); //если условие выполняется, переходим к действию из тела do



?>